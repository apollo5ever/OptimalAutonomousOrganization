{"ast":null,"code":"var _jsxFileName = \"/home/josho/OAO/OptimalAutonomousOrganization/src/oao.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { ethers } from 'ethers';\nimport OAO_abi from './OAO_abi.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OAO = () => {\n  _s();\n\n  const contractAddress = '0x1f2d37fE5d95dEBFD1AbEb711977179Ef86a16F8';\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [defaultAccount, setDefaultAccount] = useState(null);\n  const [connButtonText, setConnButtonText] = useState('Connect Wallet');\n  const [currentContractVal, setCurrentContractVal] = useState(null);\n  const [provider, setProvider] = useState(null);\n  const [signer, setSigner] = useState(null);\n  const [contract, setContract] = useState(null);\n\n  const connectWalletHandler = () => {\n    if (window.ethereum) {\n      window.ethereum.request({\n        method: 'eth_requestAccounts'\n      }).then(result => {\n        accountChangedHandler(result[0]);\n        setConnButtonText('Wallet Connected');\n      });\n    } else {\n      setErrorMessage('Need to install Metamask!');\n    }\n  };\n\n  const accountChangedHandler = newAccount => {\n    setDefaultAccount(newAccount);\n    updateEthers();\n  };\n\n  const updateEthers = () => {\n    let tempProvider = new ethers.providers.Web3Provider(window.ethereum);\n    setProvider(tempProvider);\n    let tempSigner = tempProvider.getSigner();\n    setSigner(tempSigner);\n    let tempContract = new ethers.Contract(contractAddress, OAO_abi, tempSigner);\n    setContract(tempContract);\n  };\n\n  const openVote = async () => {\n    let val = await contract.getNonEmpty();\n    setCurrentContractVal(val);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\" \", \"Optimal Autonomous Organization\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectWalletHandler,\n      children: [\" \", connButtonText]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\" Address : \", defaultAccount, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: openVote,\n      children: \" Open Vote \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 4\n    }, this), currentContractVal, errorMessage]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 3\n  }, this);\n};\n\n_s(OAO, \"vLp6R4Eq9uQ2o1tV7nrIMN1o8S0=\");\n\n_c = OAO;\nexport default OAO;\n\nvar _c;\n\n$RefreshReg$(_c, \"OAO\");","map":{"version":3,"names":["React","useState","ethers","OAO_abi","OAO","contractAddress","errorMessage","setErrorMessage","defaultAccount","setDefaultAccount","connButtonText","setConnButtonText","currentContractVal","setCurrentContractVal","provider","setProvider","signer","setSigner","contract","setContract","connectWalletHandler","window","ethereum","request","method","then","result","accountChangedHandler","newAccount","updateEthers","tempProvider","providers","Web3Provider","tempSigner","getSigner","tempContract","Contract","openVote","val","getNonEmpty"],"sources":["/home/josho/OAO/OptimalAutonomousOrganization/src/oao.js"],"sourcesContent":["import React, {useState} from 'react'\nimport {ethers} from 'ethers';\nimport OAO_abi from './OAO_abi.json';\n\nconst OAO = () => {\n\t\n\tconst contractAddress = '0x1f2d37fE5d95dEBFD1AbEb711977179Ef86a16F8';\n\t\n\tconst [errorMessage, setErrorMessage] = useState(null);\n\tconst [defaultAccount, setDefaultAccount] = useState(null);\n\tconst [connButtonText, setConnButtonText] = useState('Connect Wallet');\n\t\n\tconst [currentContractVal, setCurrentContractVal] = useState(null);\n\t\n\tconst [provider, setProvider] = useState(null);\n\tconst [signer, setSigner] = useState(null);\n\tconst [contract, setContract] = useState(null);\n\t\n\tconst connectWalletHandler = () => {\n\t\tif(window.ethereum) {\n\t\t\twindow.ethereum.request({method: 'eth_requestAccounts'})\n\t\t\t.then(result => {\n\t\t\t\taccountChangedHandler(result[0]);\n\t\t\t\tsetConnButtonText('Wallet Connected');\n\t\t\t})\n\t\t} else {\n\t\t\tsetErrorMessage('Need to install Metamask!');\n\t\t}\n\t\n\t}\n\t\n\tconst accountChangedHandler = (newAccount) => {\n\t\tsetDefaultAccount(newAccount);\n\t\tupdateEthers();\n\t}\n\t\n\tconst updateEthers = () => {\n\t\tlet tempProvider = new ethers.providers.Web3Provider(window.ethereum);\n\t\tsetProvider(tempProvider);\n\t\t\n\t\tlet tempSigner = tempProvider.getSigner();\n\t\tsetSigner(tempSigner);\n\t\t\n\t\tlet tempContract = new ethers.Contract(contractAddress, OAO_abi,tempSigner);\n\t\tsetContract(tempContract);\n\t}\n\t\n\tconst openVote = async () => {\n\t\tlet val = await contract.getNonEmpty();\n\t\tsetCurrentContractVal(val);\n\t\t\n\t}\n\t\n\treturn (\n\t\t<div>\n\t\t\t<h3> {\"Optimal Autonomous Organization\"} </h3>\n\t\t\t<button onClick = {connectWalletHandler}> {connButtonText}</button>\n\t\t\t<h3> Address : {defaultAccount} </h3>\n\t\t\t\n\t\t\t<button onClick ={openVote}> Open Vote </button>\n\t\t\t{currentContractVal}\n\t\t\t{errorMessage}\n\t\t</div>\n\t\t)\n}\n\nexport default OAO;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,MAAR,QAAqB,QAArB;AACA,OAAOC,OAAP,MAAoB,gBAApB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;EAAA;;EAEjB,MAAMC,eAAe,GAAG,4CAAxB;EAEA,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,IAAD,CAAhD;EACA,MAAM,CAACO,cAAD,EAAiBC,iBAAjB,IAAsCR,QAAQ,CAAC,IAAD,CAApD;EACA,MAAM,CAACS,cAAD,EAAiBC,iBAAjB,IAAsCV,QAAQ,CAAC,gBAAD,CAApD;EAEA,MAAM,CAACW,kBAAD,EAAqBC,qBAArB,IAA8CZ,QAAQ,CAAC,IAAD,CAA5D;EAEA,MAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,IAAD,CAAxC;EACA,MAAM,CAACe,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAC,IAAD,CAApC;EACA,MAAM,CAACiB,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,CAAC,IAAD,CAAxC;;EAEA,MAAMmB,oBAAoB,GAAG,MAAM;IAClC,IAAGC,MAAM,CAACC,QAAV,EAAoB;MACnBD,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB;QAACC,MAAM,EAAE;MAAT,CAAxB,EACCC,IADD,CACMC,MAAM,IAAI;QACfC,qBAAqB,CAACD,MAAM,CAAC,CAAD,CAAP,CAArB;QACAf,iBAAiB,CAAC,kBAAD,CAAjB;MACA,CAJD;IAKA,CAND,MAMO;MACNJ,eAAe,CAAC,2BAAD,CAAf;IACA;EAED,CAXD;;EAaA,MAAMoB,qBAAqB,GAAIC,UAAD,IAAgB;IAC7CnB,iBAAiB,CAACmB,UAAD,CAAjB;IACAC,YAAY;EACZ,CAHD;;EAKA,MAAMA,YAAY,GAAG,MAAM;IAC1B,IAAIC,YAAY,GAAG,IAAI5B,MAAM,CAAC6B,SAAP,CAAiBC,YAArB,CAAkCX,MAAM,CAACC,QAAzC,CAAnB;IACAP,WAAW,CAACe,YAAD,CAAX;IAEA,IAAIG,UAAU,GAAGH,YAAY,CAACI,SAAb,EAAjB;IACAjB,SAAS,CAACgB,UAAD,CAAT;IAEA,IAAIE,YAAY,GAAG,IAAIjC,MAAM,CAACkC,QAAX,CAAoB/B,eAApB,EAAqCF,OAArC,EAA6C8B,UAA7C,CAAnB;IACAd,WAAW,CAACgB,YAAD,CAAX;EACA,CATD;;EAWA,MAAME,QAAQ,GAAG,YAAY;IAC5B,IAAIC,GAAG,GAAG,MAAMpB,QAAQ,CAACqB,WAAT,EAAhB;IACA1B,qBAAqB,CAACyB,GAAD,CAArB;EAEA,CAJD;;EAMA,oBACC;IAAA,wBACC;MAAA,gBAAM,iCAAN;IAAA;MAAA;MAAA;MAAA;IAAA,QADD,eAEC;MAAQ,OAAO,EAAIlB,oBAAnB;MAAA,gBAA2CV,cAA3C;IAAA;MAAA;MAAA;MAAA;IAAA,QAFD,eAGC;MAAA,0BAAgBF,cAAhB;IAAA;MAAA;MAAA;MAAA;IAAA,QAHD,eAKC;MAAQ,OAAO,EAAG6B,QAAlB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QALD,EAMEzB,kBANF,EAOEN,YAPF;EAAA;IAAA;IAAA;IAAA;EAAA,QADD;AAWA,CA5DD;;GAAMF,G;;KAAAA,G;AA8DN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}